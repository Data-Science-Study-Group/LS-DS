install.packages(c("assertthat", "audio", "cli", "e1071", "earth", "fs", "ggfortify", "git2r", "highr", "JuliaCall", "openssl", "pkgbuild", "pls", "RcppArmadillo", "recipes", "rlang", "rstudioapi", "zoo"))
library(rmarkdown)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(background = '718CBA')
# source("../../LSR.R")
library(dplyr)
library(tidyr)
library(ggplot2)
# install.packages("readxl")
library(readxl)
dataset <- read_excel("retail.xlsx")
str(dataset)
colnames(dataset)
sapply(dataset, function(x) length(unique(x)))
dataset$leadTime <- dataset$`Ship Date` - dataset$`Order Date`
task11 <- dataset %>%
group_by(`Sub-Category`) %>%
summarise(avgLT = mean(leadTime), sdLT = sd(leadTime)) %>%
arrange(desc(avgLT))
head(task11, 3)
task11$avgLT <-
task11$avgLT %>%
as.numeric(units = "days") %>%
round(2)
task11$sdLT  <-
task11$sdLT  %>%
as.numeric(units = "days") %>%
round(2)
print(task11)
ggplot(dataset) +
geom_boxplot(aes(x = `Sub-Category`, y = leadTime)) +
coord_flip()
dataset$leadTime <- dataset$leadTime %>% as.numeric(units = "days")
ggplot(dataset) +
geom_boxplot(aes(x = `Sub-Category`, y = leadTime)) +
coord_flip() +
labs(title = "Distribution of Lead Time", x = "Lead Time (in days)")
# For each Category
task13a <- dataset %>%
group_by(`Category`) %>%
summarise(maxLeadTimePercent =
100*sum(leadTime==7)/length(leadTime)) %>%
arrange(desc(maxLeadTimePercent))
task13a
# For each Sub-Category
task13b <- dataset %>%
group_by(`Sub-Category`) %>%
summarise(maxLeadTimePercent = 100*sum(leadTime==7)/length(leadTime)) %>%
arrange(desc(maxLeadTimePercent))
task13b %>% head(8) %>% t() # first 8 obs & transpose
task21 <- dataset %>%
group_by(Category) %>%
summarise(Sales = sum(Sales), Profit = sum(Profit)) %>%
mutate(profitRatio = round(Profit/Sales,2)) %>%
arrange(desc(profitRatio))
print(task21)
# Reference: `M24 piechart`
ggplot(task21, aes(x = "", y = Sales, fill = factor(Category))) +
geom_bar(width = 1, stat = "identity") +
theme(axis.line = element_blank(),
plot.title = element_text(hjust = 0.5)) +
labs(fill = "Category", x = NULL, y = NULL, title = "Sales Contribution") +
coord_polar(theta = "y", start = 0)
ggplot(task21, aes(x = "", y = Profit, fill = factor(Category))) +
geom_bar(width = 1, stat = "identity") +
theme(axis.line = element_blank(),
plot.title = element_text(hjust = 0.5)) +
labs(fill = "Category", x = NULL, y = NULL, title = "Profits Contribution") +
coord_polar(theta = "y", start = 0)
task22 <- dataset %>%
group_by(`Sub-Category`) %>%
summarise(numRecords = length(Sales), Sales = sum(Sales), Profit = sum(Profit)) %>%
mutate(profitRatio = round(Profit/Sales,2)) %>%
arrange(desc(profitRatio))
task22
# Reference: `M24. Deviation`
task22$profitHL <-
ifelse(task22$profitRatio < mean(task22$profitRatio),
"below average", "above average")
task22 <- task22 %>% arrange(profitRatio)
# Convert to factor to preserve sorted order in plot.
task22$`Sub-Category` <-
factor(task22$`Sub-Category`, levels = task22$`Sub-Category`)
a <- ggplot(task22,
aes(x = `Sub-Category`, y = profitRatio, label = profitRatio)) +
geom_bar(stat = 'identity', aes(fill = profitHL), width = .5) +
scale_fill_manual(
name = "Profit Ratio",
labels = c("Below Average", "Above Average"),
values = c("below average" = "#f8766d",
"above average" = "#00ba38")) +
labs(title = "Diverging bar",
subtitle = "Profitability of each Sub-Category") +
coord_flip()
print(a)
# Reference: `M24 Deviation`
a <- ggplot(task22,
aes(x = `Sub-Category`, y = profitRatio, label = profitRatio)) +
geom_point(stat = 'identity', fill = "black", size = 8) +
geom_segment(aes(y = 0, x = `Sub-Category`,
yend = profitRatio, xend = `Sub-Category`),
color = "black") +
geom_text(color = "white", size = 3) +
labs(title = "Diverging Lollipop Chart",
subtitle = "Profitability of each Sub-Category") +
ylim(-0.2, 0.5) +
coord_flip()
print(a)
task22 %>% arrange(desc(Profit, Sales))
task23 <- dataset %>%
mutate(year    = substr(`Order Date`, 1, 4),
quarter = ceiling(as.numeric(substr(`Order Date`, 6, 7))/3)) %>%
select(year, quarter, Category, `Sub-Category`, Profit, Sales) %>%
group_by(year, quarter, Category) %>%
summarise(Sales = sum(Sales), Profit = sum(Profit))
task23$year    <- factor(task23$year)
task23$quarter <- factor(paste0("Q", task23$quarter))
head(task23)
ggplot(task23, aes(x = factor(Category), y = Sales, fill = factor(Category))) +
geom_bar(stat = 'identity') + # for already aggregated quantity
facet_grid(year ~ quarter) + # x: quater, y: year
theme(axis.text.x = element_text(angle = 45, hjust = 1)) + # rotate x_label
labs(title = "Sales Trend") # title
ggplot(task23, aes(x = factor(Category), y = Profit, fill = factor(Category))) +
geom_bar(stat = 'identity') +
facet_grid(year~quarter) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(title = "Profit Trend")
library(rmarkdown)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(background = '718CBA')
# source("../../LSR.R")
library(dplyr)
library(tidyr)
library(ggplot2)
# install.packages("readxl")
library(readxl)
dataset <- read_excel("retail.xlsx")
str(dataset)
colnames(dataset)
sapply(dataset, function(x) length(unique(x)))
dataset$leadTime <- dataset$`Ship Date` - dataset$`Order Date`
task11 <- dataset %>%
group_by(`Sub-Category`) %>%
summarise(avgLT = mean(leadTime), sdLT = sd(leadTime)) %>%
arrange(desc(avgLT))
head(task11, 3)
task11$avgLT <-
task11$avgLT %>%
as.numeric(units = "days") %>%
round(2)
task11$sdLT  <-
task11$sdLT  %>%
as.numeric(units = "days") %>%
round(2)
print(task11)
ggplot(dataset) +
geom_boxplot(aes(x = `Sub-Category`, y = leadTime)) +
coord_flip()
dataset$leadTime <- dataset$leadTime %>% as.numeric(units = "days")
ggplot(dataset) +
geom_boxplot(aes(x = `Sub-Category`, y = leadTime)) +
coord_flip() +
labs(title = "Distribution of Lead Time", x = "Lead Time (in days)")
# For each Category
task13a <- dataset %>%
group_by(`Category`) %>%
summarise(maxLeadTimePercent =
100*sum(leadTime==7)/length(leadTime)) %>%
arrange(desc(maxLeadTimePercent))
task13a
# For each Sub-Category
task13b <- dataset %>%
group_by(`Sub-Category`) %>%
summarise(maxLeadTimePercent = 100*sum(leadTime==7)/length(leadTime)) %>%
arrange(desc(maxLeadTimePercent))
task13b %>% head(8) %>% t() # first 8 obs & transpose
task21 <- dataset %>%
group_by(Category) %>%
summarise(Sales = sum(Sales), Profit = sum(Profit)) %>%
mutate(profitRatio = round(Profit/Sales,2)) %>%
arrange(desc(profitRatio))
print(task21)
# Reference: `M24 piechart`
ggplot(task21, aes(x = "", y = Sales, fill = factor(Category))) +
geom_bar(width = 1, stat = "identity") +
theme(axis.line = element_blank(),
plot.title = element_text(hjust = 0.5)) +
labs(fill = "Category", x = NULL, y = NULL, title = "Sales Contribution") +
coord_polar(theta = "y", start = 0)
ggplot(task21, aes(x = "", y = Profit, fill = factor(Category))) +
geom_bar(width = 1, stat = "identity") +
theme(axis.line = element_blank(),
plot.title = element_text(hjust = 0.5)) +
labs(fill = "Category", x = NULL, y = NULL, title = "Profits Contribution") +
coord_polar(theta = "y", start = 0)
task22 <- dataset %>%
group_by(`Sub-Category`) %>%
summarise(numRecords = length(Sales), Sales = sum(Sales), Profit = sum(Profit)) %>%
mutate(profitRatio = round(Profit/Sales,2)) %>%
arrange(desc(profitRatio))
task22
# Reference: `M24. Deviation`
task22$profitHL <-
ifelse(task22$profitRatio < mean(task22$profitRatio),
"below average", "above average")
task22 <- task22 %>% arrange(profitRatio)
# Convert to factor to preserve sorted order in plot.
task22$`Sub-Category` <-
factor(task22$`Sub-Category`, levels = task22$`Sub-Category`)
a <- ggplot(task22,
aes(x = `Sub-Category`, y = profitRatio, label = profitRatio)) +
geom_bar(stat = 'identity', aes(fill = profitHL), width = .5) +
scale_fill_manual(
name = "Profit Ratio",
labels = c("Below Average", "Above Average"),
values = c("below average" = "#f8766d",
"above average" = "#00ba38")) +
labs(title = "Diverging bar",
subtitle = "Profitability of each Sub-Category") +
coord_flip()
print(a)
# Reference: `M24 Deviation`
a <- ggplot(task22,
aes(x = `Sub-Category`, y = profitRatio, label = profitRatio)) +
geom_point(stat = 'identity', fill = "black", size = 8) +
geom_segment(aes(y = 0, x = `Sub-Category`,
yend = profitRatio, xend = `Sub-Category`),
color = "black") +
geom_text(color = "white", size = 3) +
labs(title = "Diverging Lollipop Chart",
subtitle = "Profitability of each Sub-Category") +
ylim(-0.2, 0.5) +
coord_flip()
print(a)
task22 %>% arrange(desc(Profit, Sales))
task23 <- dataset %>%
mutate(year    = substr(`Order Date`, 1, 4),
quarter = ceiling(as.numeric(substr(`Order Date`, 6, 7))/3)) %>%
select(year, quarter, Category, `Sub-Category`, Profit, Sales) %>%
group_by(year, quarter, Category) %>%
summarise(Sales = sum(Sales), Profit = sum(Profit))
task23$year    <- factor(task23$year)
task23$quarter <- factor(paste0("Q", task23$quarter))
head(task23)
ggplot(task23, aes(x = factor(Category), y = Sales, fill = factor(Category))) +
geom_bar(stat = 'identity') + # for already aggregated quantity
facet_grid(year ~ quarter) + # x: quater, y: year
theme(axis.text.x = element_text(angle = 45, hjust = 1)) + # rotate x_label
labs(title = "Sales Trend") # title
ggplot(task23, aes(x = factor(Category), y = Profit, fill = factor(Category))) +
geom_bar(stat = 'identity') +
facet_grid(year~quarter) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(title = "Profit Trend")
# install.packages('gganimate')
library(gganimate)
fig_static <-
ggplot(task23, aes(x = factor(Category), y = Sales, fill = factor(Category))) +
geom_bar(stat = 'identity') + # for already aggregated quantity
#  facet_grid(year ~ quarter) + # x: quater, y: year
theme(axis.text.x = element_text(angle = 45, hjust = 1)) + # rotate x_label
labs(title = "Sales Trend") # title
fig_static
task23 <- task23 %>%
mutate(Q_end = as.Date(paste(
year, as.numeric(substr(quarter, 2, 2))*3, 30, sep = "-")))
fig_static <-
ggplot(task23, aes(x = factor(Category), y = Sales, fill = factor(Category))) +
geom_bar(stat = 'identity') + # for already aggregated quantity
#  facet_grid(year ~ quarter) + # x: quater, y: year
theme(axis.text.x = element_text(angle = 45, hjust = 1)) + # rotate x_label
labs(title = "Sales Trend") # title
# install.packages("gifski")
fig_dynamic <-
fig_static +
transition_time(Q_end) +
labs(title = "Year-Quarter: {frame_time}")
fig_dynamic
task23$year <- as.integer(task23$year)
# Chunk 1: global
library(readxl)
library(dplyr)
library(shiny)
library(ggplot2)
library(DT)
library(tidyr)
library(data.table)
library(rmarkdown)
library(stringr)
dataset <- read_excel("input_data/retail.xlsx")
dataset <- dataset %>%
select(`Order ID`, `Order Date`, Category, `Sub-Category`,
`Product Name`, Quantity, Profit)
dataset$`Order Date` <- as.Date(dataset$`Order Date`)
choices = unique(dataset$Region)
# Part 1. create `ui`
dataset %>% str()
