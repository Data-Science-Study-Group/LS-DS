my_tidy %>% head()
my_tidy <- my_tidy %>%
mutate(Y = substr(YM, 1, 4) %>% as.numeric(),
M = substr(YM, 6, 7) %>% as.numeric())
my_tidy %>% head()
my_tidy %>% str()
dataset <- my_tidy %>%
select(YM, Y, M, 상품군별, 판매매체별, Revenue) %>%
arrange(YM, Y, M, 상품군별, 판매매체별, Revenue)
head(dataset)
knitr::opts_chunk$set(echo = TRUE)
library(zoo)
library(readxl)
library(tidyverse)
head(dataset)
head(dataset)
dataset2 <- dataset %>% spread(key = "판매매체별", value = "Revenue")
head(dataset2)
ggplot(dataset2, aes(x = M, group = Y)) + geom_line(aes(y = 계))
fig1 <- ggplot(dataset2, aes(x = M, group = as.factor(Y))) + geom_line(aes(y = 계))
fig1
fig1 <- ggplot(dataset2, aes(x = M, group = as.factor(Y))) + geom_path(aes(y = 계))
fig1
fig1 <- ggplot(dataset2, aes(x = as.factor(M), group = as.factor(Y))) + geom_path(aes(y = 계))
fig1
fig1 <- ggplot(dataset2, aes(x = as.factor(M), group = as.factor(Y))) + geom_point(aes(y = 계))
fig1
ggplot(dataset2, aes(x = M)) + geom_point(aes(y = 계))
ggplot(dataset2, aes(x = M, color = Y)) + geom_point(aes(y = 계))
ggplot(dataset2, aes(x = M, color = as.factor(Y))) + geom_point(aes(y = 계))
dataset2
ggplot(dataset2, aes(x = M, color = as.factor(Y))) + geom_point(aes(y = 계)) + facet_wrap(~ 상품군별)
ggplot(dataset2 %>% filter(상품군별==합계), aes(x = M, color = as.factor(Y))) + geom_point(aes(y = 계))
unique(상품군별)
unique(dataset$상품군별)
ggplot(dataset2 %>% filter(상품군별==합계), aes(x = M, color = as.factor(Y))) + geom_point(aes(y = 계))
unique(dataset2$상품군별)
dataset2 %>% filter(상품군별==합계)
dataset2$상품군별
unique(dataset2$상품군별)
ggplot(dataset2 %>% filter(상품군별=="합계"), aes(x = M, color = as.factor(Y))) + geom_point(aes(y = 계))
ggplot(dataset2 %>% filter(상품군별=="합계", Y %in% c(2017,2018)), aes(x = M, color = as.factor(Y))) + geom_point(aes(y = 계))
ggplot(dataset2 %>% filter(상품군별=="합계", Y %in% c(2017,2018)), aes(x = M, color = as.factor(Y))) + geom_line(aes(y = 계))
ggplot(dataset2 %>% filter(상품군별=="합계", Y %in% c(2017,2018)),
aes(x = M, color = as.factor(Y))) +
geom_line(aes(y = 계)) +
geom_point(aes(y = 계))
ggplot(dataset2 %>% filter(상품군별=="합계", Y %in% c(2017,2018)),
aes(x = as.factor(M), color = as.factor(Y))) +
geom_line(aes(y = 계)) +
geom_point(aes(y = 계)) +
labs(x = "", title = "온라인 매출 동향 (단위: 백만원)")
ggplot(dataset2 %>% filter(상품군별=="합계", Y %in% c(2017,2018)),
aes(x = as.factor(M), color = as.factor(Y))) +
geom_line(aes(y = 계)) +
geom_point(aes(y = 계)) +
labs(x = "", title = "온라인 매출 동향 (단위: 백만원)")
ggplot(dataset2 %>% filter(상품군별=="합계", Y %in% c(2017,2018)),
aes(x = as.factor(M), color = as.factor(Y))) +
geom_path(aes(y = 계)) +
geom_point(aes(y = 계)) +
labs(x = "", title = "온라인 매출 동향 (단위: 백만원)")
aes(x = YM) +
ggplot(dataset2 %>% filter(상품군별=="합계"), aes(x = YM)) +
geom_point(aes(y = 계)) +
labs(x = "", title = "온라인 매출 동향 (단위: 백만원)")
library(ggplot)
library(ggplot2)
library(plotly)
unique(dataset2$상품군별)
ggplot(dataset2 %>% filter(상품군별=="합계"), aes(x = YM)) +
geom_point(aes(y = 계)) +
labs(x = "", title = "온라인 매출 동향 (단위: 백만원)")
ggplot(dataset2 %>% filter(상품군별=="합계"), aes(x = YM)) +
geom_point(aes(y = 계)) +
labs(x = "", title = "온라인 매출 동향 (단위: 백만원)") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(dataset2 %>% filter(상품군별=="합계"), aes(x = YM)) +
geom_point(aes(y = 계)) +
labs(x = "", title = "온라인 매출 동향 (단위: 백만원)") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
scale_x_continuous(labels = comma)
ggplot(dataset2 %>% filter(상품군별=="합계"), aes(x = YM)) +
geom_point(aes(y = 계)) +
labs(x = "", title = "온라인 매출 동향 (단위: 백만원)") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
scale_x_continuous(labels = scales::comma)
options(scipen=999)
ggplot(dataset2 %>% filter(상품군별=="합계"), aes(x = YM)) +
geom_point(aes(y = 계)) +
labs(x = "", title = "온라인 매출 동향 (단위: 백만원)") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
fig1 <- ggplot(dataset2 %>% filter(상품군별=="합계"), aes(x = YM)) +
geom_point(aes(y = 계)) +
labs(x = "", title = "온라인 매출 동향 (단위: 백만원)") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
fig1 %>% ggplotly()
fig1 <- ggplot(dataset2 %>% filter(상품군별=="합계"), aes(x = YM)) +
geom_smooth(aes(y = 계)) +
labs(x = "", title = "온라인 매출 동향 (단위: 백만원)") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
fig1 %>% ggplotly()
fig1 <- ggplot(dataset2 %>% filter(상품군별=="합계"), aes(x = YM)) +
geom_point(aes(y = 계)) +
labs(x = "", title = "온라인 매출 동향 (단위: 백만원)") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
fig1 %>% ggplotly()
fig1 <- ggplot(dataset %>% filter(상품군별=="합계"), aes(x = YM, group=판매매체별)) +
geom_point(aes(y = Revenue)) +
labs(x = "", title = "온라인 매출 동향 (단위: 백만원)") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
fig1 %>% ggplotly()
fig1 <- ggplot(dataset %>% filter(상품군별=="합계"),
aes(x = YM, y = Revenue, group = 판매매체별, color = 판매매체별)) +
geom_point() +
labs(x = "", title = "온라인 매출 동향 (단위: 백만원)") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
fig1
fig1 <- ggplot(dataset %>% filter(상품군별=="합계"),
aes(x = YM, y = Revenue, color = 판매매체별)) +
geom_point() +
labs(x = "", title = "온라인 매출 동향 (단위: 백만원)") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
fig1 %>% ggplotly()
fig1 <- ggplot(dataset %>% filter(상품군별=="합계"),
aes(x = YM, y = Revenue, color = 판매매체별)) +
geom_point() +
geom_lint()
fig1 <- ggplot(dataset %>% filter(상품군별=="합계"),
aes(x = YM, y = Revenue, color = 판매매체별)) +
geom_point() +
geom_line() +
labs(x = "", title = "온라인 매출 동향 (단위: 백만원)") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
fig1
fig1 <- ggplot(dataset %>% filter(상품군별=="합계"),
aes(x = YM, y = Revenue, color = 판매매체별)) +
geom_point() +
geom_line(aes(group = 판매매체별)) +
labs(x = "", title = "온라인 매출 동향 (단위: 백만원)") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
fig1
fig2 <- ggplot(dataset %>% filter(상품군별!="합계"),
aes(x = YM, y = Revenue, color = 판매매체별)) +
geom_point() +
geom_line(aes(group = 판매매체별)) +
labs(x = "", title = "온라인 매출 동향 (단위: 백만원)") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
facet_wrap(~ 상품군별)
fig2 %>% ggplotly()
fig2
ggsave(plot = fig2, filename = "data/fig2.png", dpi = 300, width = 20, height = 10)
fig2b <- fig2 + (scales = "free_y")
fig2b <- fig2 + facet_wrap(scales = "free_y")
fig2b <- fig2 + facet_wrap(~ 상품군별, scales = "free_y") # google: "facet to have different y axis"
ggsave(plot = fig2b, filename = "data/fig2b.png", dpi = 300, width = 20, height = 10)
fig2 <- ggplot(dataset,
aes(x = YM, y = Revenue, color = 판매매체별)) +
geom_point() +
geom_line(aes(group = 판매매체별)) +
labs(x = "", title = "온라인 매출 동향 (단위: 백만원)") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
facet_wrap(~ 상품군별)
fig2b <- fig2 + facet_wrap(~ 상품군별, scales = "free_y") # google: "facet to have different y axis"
ggsave(plot = fig2b, filename = "data/fig2b.png", dpi = 300, width = 20, height = 10)
fig2b
https://docs.google.com/spreadsheets/d/1r1GA6Jm0xZX4G7o4qN9BGGFyWRkRxz-yL1BhkChW864/edit#gid=111949583
https://docs.google.com/spreadsheets/d/1r1GA6Jm0xZX4G7o4qN9BGGFyWRkRxz-yL1BhkChW864/edit#gid=111949583
library(gsheet)
gsheet2tbl('docs.google.com/spreadsheets/d/1I9mJsS5QnXF2TNNntTy-HrcdHmIF9wJ8ONYvEJTXSNo')
install.packages("gsheet")
library(gsheet)
data2015 <- gsheet2tbl('https://docs.google.com/spreadsheets/d/1r1GA6Jm0xZX4G7o4qN9BGGFyWRkRxz-yL1BhkChW864/edit#gid=111949583')
head(data2015)
knitr::opts_chunk$set(echo = TRUE)
# install.packages("gsheet")
library(gsheet)
data2015 <- gsheet2tbl('https://docs.google.com/spreadsheets/d/1r1GA6Jm0xZX4G7o4qN9BGGFyWRkRxz-yL1BhkChW864/edit#gid=111949583')
head(data2015)
knitr::opts_chunk$set(echo = TRUE)
a <- read.csv("lifeCountry.csv")
head(a)
View(a)
dim(a)
library(ggplot2)
library(gridExtra)
library(ISLR)
str(a)
test1 <- ggplot(data= a)+ geom_point (mapping = aes(x= GDP_per_Capita, y= Life.Expectancy))
test1 <- ggplot(data= a)+ geom_point (mapping = aes(x= GDP_per_Capita, y= Life.Expectancy, color=Continent ))
test1
test2 <- test1+ facet_wrap(~Continent)
test2
str(a)
fig1 <-
ggplot(data = a, aes(x= GDP_per_Capita)) +
geom_point(aes(y= Life.Expectancy), color = "black") +
geom_point(aes(y=Female), color = "red") +
geom_point(aes(y=Male), color = "blue") +
facet_wrap(~ Continent)
library(plotly)
fig1 %>% ggplotly()
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(gridExtra)
a <- ggplot(mpg, aes(x=cyl, y=hwy)) + geom_point()
b <- ggplot(mpg, aes(x=cyl, y=hwy)) + geom_boxplot()
c <- ggplot(mpg, aes(x=as.factor(cyl), y=hwy)) + geom_boxplot()
d <- ggplot(mpg, aes(x=as.factor(cyl), y=hwy)) + geom_violin()
grid.arrange(a,b,c,d, nrow=2, ncol=2)
ggplot(data=mpg)+geom_point (mapping=aes(x=displ, y=hwy, color="blue"))
ggplot(data=mpg)+geom_point (mapping=aes(x=displ, y=hwy), color="blue")
summary(mpg)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(~ cty, nrow = 1)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(~ class, nrow = 1)
a <- ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_grid(drv ~ .)
b <- ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(drv ~ .)
c <- ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_grid(. ~ cyl)
d <- ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(. ~ cyl)
grid.arrange(a,b,c,d, nrow=2, ncol=2)
ggplot(data=diamonds, mapping=aes(x=cut, fill=clarity))+geom_bar(alpha=1/5)
ggplot(data=diamonds, mapping=aes(x=cut, colour=clarity))+geom_bar(fill=NA)
ggplot(mtcars, aes(mpg, wt, colour = cyl)) + geom_point() +
labs(colour = "hi") +
labs(x = "New")
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
ggplot(mpg, aes(x=cyl, y=hwy))+geom_point()
ggplot(mpg, aes(x=cyl, y=hwy))+geom_boxplot()
ggplot(mpg, aes(x=cyl, y=hwy))+geom_boxplot()
ggplot(mpg, aes(x=as.factor(cyl), y=hwy)) +geom_boxplot()
ggplot(mpg, aes(x=as.factor(cyl), y=hwy)) +geom_violin()
ggplot(data = mpg) + geom_point(mapping = aes(x=displ, y=hwy, colot = "blue")
geom_point(mapping = aes(x=displ, y=hwy, colot = "blue")
ggplot(data = mpg) + geom_point(mapping= aes(x=displ, y=hwy), color = "blue")
ggplot(data = mpg) +geom_point(mapping = aes(x=displ, y=hwy)) + facet_grid(drv ~ .)
ggplot(data = mpg) +geom_point(mapping = aes(x=displ, y=hwy)) + facet_grid(. ~ cyl)
ggplot(data = diamonds, mapping = aes(x=cut, fill= clarity)) + geom_bar(alpha=1/5)
ggplot(data = diamonds, mapping = aes(x=cut, colour = clarity)) + geom_bar(fill = NA)
ggplot(data = diamonds, mapping = aes(x=cut, colour = clarity)) + geom_bar(fill = NA)
# install.packages("gglot2") <- spelling error
ggplot(data = diamonds, mapping = aes(x=cut, colour = clarity)) + geom_bar(fill = NA)
asdjladj\\hiashdjkas\
knitr::opts_chunk$set(echo = TRUE)
library(zoo)
library(readxl)
library(tidyverse)
library(plotly)
fig2 <- ggplot(dataset,
aes(x = YM, y = Revenue, color = 판매매체별)) +
geom_point() +
geom_line(aes(group = 판매매체별)) +
labs(x = "", title = "온라인 매출 동향 (단위: 백만원)") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
facet_wrap(~ 상품군별)
knitr::opts_chunk$set(echo = TRUE)
library(zoo)
library(readxl)
library(tidyverse)
library(plotly)
library(readxl)
raw <- read_excel("data/온라인쇼핑몰_판매매체별_상품군별거래액_20190328095024.xlsx", sheet = "데이터")
raw[1:6,1:6]
library(zoo)
x <- zoo(c(2,NA,1,4,5,2))
na.locf(x)
y <- c(2,NA,1,4,5,2)
na.locf(y)
raw$상품군별 <- na.locf(raw$상품군별)
raw[1:6,1:6]
library(tidyverse)
my_tidy <- raw %>%
gather(colnames(raw)[-(1:2)], key = "YM", value = "Revenue")
head(my_tidy)
tail(my_tidy)
unique(my_tidy$YM)
my_tidy$YM <- paste(substr(my_tidy$YM, 1, 4), substr(my_tidy$YM, 7, 8), sep = "-")
unique(my_tidy$YM)
my_tidy <- my_tidy %>%
mutate(Y = substr(YM, 1, 4) %>% as.numeric(),
M = substr(YM, 6, 7) %>% as.numeric())
my_tidy %>% head()
my_tidy %>% str()
dataset <- my_tidy %>%
select(YM, Y, M, 상품군별, 판매매체별, Revenue) %>%
arrange(YM, Y, M, 상품군별, 판매매체별, Revenue)
head(dataset)
head(dataset)
library(ggplot2)
library(plotly)
options(scipen=999) # Avoid scientific expression e.g.) 1e+05
unique(dataset$상품군별)
fig1 <- ggplot(dataset %>% filter(상품군별=="합계"),
aes(x = YM, y = Revenue, color = 판매매체별)) +
geom_point() +
geom_line(aes(group = 판매매체별)) +
labs(x = "", title = "온라인 매출 동향 (단위: 백만원)") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
fig1 %>% ggplotly()
fig2 <- ggplot(dataset,
aes(x = YM, y = Revenue, color = 판매매체별)) +
geom_point() +
geom_line(aes(group = 판매매체별)) +
labs(x = "", title = "온라인 매출 동향 (단위: 백만원)") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
facet_wrap(~ 상품군별)
ggsave(plot = fig2, filename = "data/fig2.png", dpi = 300, width = 20, height = 10)
fig2b <- fig2 + facet_wrap(~ 상품군별, scales = "free_y", nrow = 2) # google: "facet to have different y axis"
ggsave(plot = fig2b, filename = "data/fig2b.png", dpi = 300, width = 20, height = 120)
fig2 <- ggplot(dataset,
aes(x = YM, y = Revenue, color = 판매매체별)) +
geom_point() +
geom_line(aes(group = 판매매체별)) +
labs(x = "", title = "온라인 매출 동향 (단위: 백만원)") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
facet_wrap(~ 상품군별)
ggsave(plot = fig2, filename = "data/fig2.png", dpi = 300, width = 20, height = 10)
fig2b <- fig2 + facet_wrap(~ 상품군별, scales = "free_y", nrow = 2) # google: "facet to have different y axis"
ggsave(plot = fig2b, filename = "data/fig2b.png", dpi = 300, width = 4, height = 12)
fig2 <- ggplot(dataset,
aes(x = YM, y = Revenue, color = 판매매체별)) +
geom_point() +
geom_line(aes(group = 판매매체별)) +
labs(x = "", title = "온라인 매출 동향 (단위: 백만원)") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
facet_wrap(~ 상품군별)
ggsave(plot = fig2, filename = "data/fig2.png", dpi = 300, width = 20, height = 10)
fig2b <- fig2 + facet_wrap(~ 상품군별, scales = "free_y", nrow = 2) # google: "facet to have different y axis"
ggsave(plot = fig2b, filename = "data/fig2b.png", dpi = 300, width = 6, height = 24)
fig2 <- ggplot(dataset,
aes(x = YM, y = Revenue, color = 판매매체별)) +
geom_point() +
geom_line(aes(group = 판매매체별)) +
labs(x = "", title = "온라인 매출 동향 (단위: 백만원)") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
facet_wrap(~ 상품군별)
ggsave(plot = fig2, filename = "data/fig2.png", dpi = 300, width = 20, height = 10)
fig2b <- fig2 + facet_wrap(~ 상품군별, scales = "free_y", nrow = 3) # google: "facet to have different y axis"
ggsave(plot = fig2b, filename = "data/fig2b.png", dpi = 300, width = 6, height = 8)
fig2b <- fig2 + facet_wrap(~ 상품군별, scales = "free_y", ncol = 3) # google: "facet to have different y axis"
ggsave(plot = fig2b, filename = "data/fig2b.png", dpi = 300, width = 6, height = 8)
ggsave(plot = fig2b, filename = "data/fig2b.png", dpi = 300, width = 12, height = 16)
ggsave(plot = fig2b, filename = "data/fig2b.png", dpi = 300, width = 8, height = 24)
fig2b <- fig2 + facet_wrap(~ 상품군별, scales = "free_y", ncol = 2) # google: "facet to have different y axis"
ggsave(plot = fig2b, filename = "data/fig2b.png", dpi = 300, width = 8, height = 24)
"hello"
a<-10
a<-10+5
"hello"
a<-10
a<-a+5
a
"hello"
a <- 10
a <- a+5
a
a
"hello"
a <- 10
a <- a+5
a
"hello"
a <- 10
a <- a+5
a
"hello"
a <- 10
a <- a+5
a
"hello"
a <- 10
a <- a+5
a
library(ggplot2)
library(plotly)
a1 <- ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) +
geom_point(aes(color = class))
a2 <- a1 + geom_smooth()
ggplotly(a2)
library(dplyr)
library(kableExtra)
b <- mpg %>%
group_by(class) %>%
summarise(hwy = round(mean(hwy), 1),
cty = round(mean(cty), 1)) %>%
arrange(desc(hwy)) %>% t()
kable(b) %>%
kable_styling(bootstrap_options = "striped", full_width = FALSE)
b <- mpg %>%
group_by(class) %>%
summarise(hwy = round(mean(hwy), 1),
cty = round(mean(cty), 1)) %>%
arrange(desc(hwy)) %>% t()
b
x <- ymd(c("2012-03-26", "2012-05-04", "2012-09-23", "2012-12-31"))
library(lubridate)
x <- ymd(c("2012-03-26", "2012-05-04", "2012-09-23", "2012-12-31"))
quarter(x)
quarter(x, with_year = TRUE)
quarter(x, with_year = TRUE, fiscal_start = 11)
semester(x)
semester(x, with_year = TRUE)
? semester
semester(x, with_year = TRUE)
? facet_wrap
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(background = '718CBA')
# options(encoding = 'euc-kr')
library(Quandl) #  `quantmod` is another library for financial data
Quandl.api_key("SD27xu59qZmj-YCnxwDm")
MSFT <- Quandl("WIKI/MSFT")
str(MSFT)
class(MSFT)
MSFT <- MSFT[,c(1,6,12)]
head(MSFT)
class(MSFT)
library(xts)
MSFT_xts <- xts(x = MSFT[,-1], order.by = as.Date(MSFT[,1]))
str(MSFT_xts)
dim(MSFT)
head(MSFT)
dim(MSFT_xts)
head(MSFT_xts)
MSFT_df <- data.frame(index(MSFT_xts), MSFT_xts)
head(MSFT_df, 3)
class(MSFT_df)
rownames(MSFT_df) <- NULL
head(MSFT_df, 3)
library(dygraphs)
str(MSFT_xts)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(background = '718CBA')
# options(encoding = 'euc-kr')
library(Quandl) #  `quantmod` is another library for financial data
Quandl.api_key("SD27xu59qZmj-YCnxwDm")
MSFT <- Quandl("WIKI/MSFT")
str(MSFT)
class(MSFT)
MSFT <- MSFT[,c(1,6,12)]
head(MSFT)
class(MSFT)
library(xts)
MSFT_xts <- xts(x = MSFT[,-1], order.by = as.Date(MSFT[,1]))
str(MSFT_xts)
dim(MSFT)
head(MSFT)
dim(MSFT_xts)
head(MSFT_xts)
MSFT_df <- data.frame(index(MSFT_xts), MSFT_xts)
head(MSFT_df, 3)
class(MSFT_df)
rownames(MSFT_df) <- NULL
head(MSFT_df, 3)
library(dygraphs)
str(MSFT_xts)
rownames(MSFT_df) <- NULL
head(MSFT_df, 3)
head(MSFT_xts)
dygraph(MSFT_xts$`Adj. Close`)
dygraph(MSFT_xts[,2]) %>% dyRangeSelector()
dygraph(MSFT_xts[,2])
dygraph(MSFT_xts[,2]) %>% dyRangeSelector()
input <- NULL
input$myVar <- 10
library(tidyverse)
mpg %>% filter(cty >= input$myVar) %>% ggplot(aes(cty, hwy)) + geom_point()
version()
sessionInfo()
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(background = '718CBA')
library(ISLR) # load `ISLR` package
class(Carseats) # data structure
head(Carseats) # the first 6 observations
colnames(Carseats) # column names
library(ISLR) # load `ISLR` package
class(Carseats) # data structure
head(Carseats) # the first 6 observations
colnames(Carseats) # column names
tail(Carseats, 2) # the last 2 observations
View(Carseats) # a pop-up windows
getwd()
getwd()
getwd()
list.files()
library(readxl)
dataset <- read_excel("retail.xlsx")
rm(list=ls())
ls()
a <- "hello"
ls()
? read_excel
library(readxl)
? read_excel
devtools::install_github("rstudio/addinexamples", type = "source")
install.packages("rlang")
install.packages("rlang")
xaringan:::inf_mr()
xaringan:::inf_mr()
?xaringan::moon_reader
xaringan:::inf_mr()
