mutate(discRate = TotDiscounts/TotSales) %>%
ggplot() %>%
aes(x = discRate, y = TotSales, color = year) %>%
geom_point()
task1 %>%
mutate(discRate = TotDiscounts/TotSales) %>%
ggplot(aes(x = discRate, y = TotSales, color = year)) %>%
geom_point()
task1 %>%
mutate(discRate = TotDiscounts/TotSales) %>%
ggplot() %>%
geom_point(aes(x = discRate, y = TotSales, color = year))
a <- task1 %>%
mutate(discRate = TotDiscounts/TotSales)
ggplot(a)
a <- task1 %>% mutate(discRate = TotDiscounts/TotSales)
ggplot(data = a, aes(x = discRate, y = TotSales, color = year)) %>%
geom_point()
ggplot(data = a, aes(x = discRate, y = TotSales, color = year)) +
geom_point()
dim(task1)
print(task1)
task1_a <- task1 %>%
select(year, month, TotSales) %>%
spread(key= "year", value= "TotSales") %>%
rename(raw_2011 = '2011',
raw_2012 = '2012',
raw_2013 = '2013',
raw_2014 = '2014')
print(task1_a)
task1_b <- task1_a %>%
mutate( '2012' = raw_2012 - raw_2011,
'2013' = raw_2013 - raw_2012,
'2014' = raw_2014 - raw_2013) %>%
select(month, '2012', '2013', '2014')
print(task1_b)
task1_c <- task1_b %>%
gather(colnames(task1_b)[-1],
key = "year",
value = "Sales_growth")
print(task1_c)
task1$DCRate <- round(task1$TotDiscounts / task1$TotSales, 4) * 100
task1_d <- task1 %>%
select(year, month, DCRate) %>%
spread(key= "year", value= "DCRate") %>%
rename(raw_2011 = '2011',
raw_2012 = '2012',
raw_2013 = '2013',
raw_2014 = '2014') %>%
mutate( '2012' = raw_2012 - raw_2011,
'2013' = raw_2013 - raw_2012,
'2014' = raw_2014 - raw_2013) %>%
select(month, '2012', '2013', '2014') %>%
gather(colnames(task1_b)[-1],
key = "year",
value = "DCRate_growth")
print(task1_d)
task1_e <- inner_join(task1_c, task1_d, by= c("year", "month"))
print(task1_e)
ggplot(task1_e, aes(x= DCRate_growth, y= Sales_growth)) +
geom_point()
knitr::opts_chunk$set(echo = TRUE)
source("../../LSR.R")
library(dplyr)
library(tidyr)
library(ggplot2)
library(readxl)
dataset <- read_excel("retail.xlsx")
table(dataset$Discount)
m6 <- dataset
m6$DiscountAmount <- m6$Sales * m6$Discount
m6$DiscountLevel <-
ifelse(m6$Discount == 0, "non",
ifelse(m6$Discount <= 0.2, "low",
ifelse(m6$Discount <= 0.5, "medium", "high")))
m6$year  <- substr(m6$`Order Date`, 1, 4)
m6$month <- substr(m6$`Order Date`, 6, 7)
task1 <- m6 %>%
select(year, month, Sales, DiscountAmount) %>%
group_by(year, month) %>%
summarise(TotSales = sum(Sales),
TotDiscounts = sum(DiscountAmount))
print(task1)
ggplot(task1, aes(x= TotDiscounts, y= (TotSales))) +  # 경향성이 있음!
geom_point() +
geom_smooth(method = "lm")
a <- task1 %>% mutate(discRate = TotDiscounts/TotSales)
ggplot(data = a, aes(x = discRate, y = TotSales, color = year)) +
geom_point()
print(task1)
task1_a <- task1 %>%
select(year, month, TotSales) %>%
spread(key= "year", value= "TotSales") %>%
rename(raw_2011 = '2011',
raw_2012 = '2012',
raw_2013 = '2013',
raw_2014 = '2014')
print(task1_a)
task1_b <- task1_a %>%
mutate( '2012' = raw_2012 - raw_2011,
'2013' = raw_2013 - raw_2012,
'2014' = raw_2014 - raw_2013) %>%
select(month, '2012', '2013', '2014')
print(task1_b)
task1_c <- task1_b %>%
gather(colnames(task1_b)[-1],
key = "year",
value = "Sales_growth")
print(task1_c)
task1$DCRate <- round(task1$TotDiscounts / task1$TotSales, 4) * 100
task1_d <- task1 %>%
select(year, month, DCRate) %>%
spread(key= "year", value= "DCRate") %>%
rename(raw_2011 = '2011',
raw_2012 = '2012',
raw_2013 = '2013',
raw_2014 = '2014') %>%
mutate( '2012' = raw_2012 - raw_2011,
'2013' = raw_2013 - raw_2012,
'2014' = raw_2014 - raw_2013) %>%
select(month, '2012', '2013', '2014') %>%
gather(colnames(task1_b)[-1],
key = "year",
value = "DCRate_growth")
print(task1_d)
task1_e <- inner_join(task1_c, task1_d, by= c("year", "month"))
print(task1_e)
ggplot(task1_e, aes(x= DCRate_growth, y= Sales_growth)) +
geom_point()
g_1 <- ggplot(task1_e, aes(x= month)) +
geom_bar(aes(y= Sales_growth, fill=Sales_growth >= 0), stat= "identity") +
facet_grid(rows= vars(year)) +
scale_fill_discrete(guide=FALSE)
g_2 <- ggplot(task1_e, aes(x= month)) +
geom_bar(aes(y= DCRate_growth, fill=DCRate_growth >= 0), stat= "identity") +
facet_grid(rows= vars(year)) +
scale_fill_discrete(guide=FALSE)
library(gridExtra)
grid.arrange(g_2, g_1, nrow= 1, ncol= 2,
top= "Annualy Discount and Sales Growth")
task2_a <- m6 %>%
filter(DiscountLevel %in% c("low", "medium", "high")) %>%
ggplot(aes(x= month)) +
geom_bar(aes(fill= DiscountLevel)) +
facet_grid(rows= vars(year)) +
theme(legend.position = "bottom")
task2_b <- m6 %>%
group_by(year, month) %>%
summarise(MonSales = sum(Sales)) %>%
ggplot(aes(x= month, y= MonSales, color= year, group= year)) +
geom_line(size= 0.6, aes(linetype= year)) +
scale_color_brewer(palette="Dark2") +
theme(legend.position = "bottom")
library(gridExtra)
grid.arrange(task2_a, task2_b, nrow=2, heights= 2:1,
top= "Monthly Discount and Sales Trend")
library(rmarkdown)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(background = '718CBA')
source("../../LSR.R")
library(dplyr)
library(tidyr)
library(ggplot2)
library(readxl)
dataset <- read_excel("retail.xlsx")
str(dataset)
dim(dataset)
head(dataset)
dataset$leadTime <- dataset$`Ship Date` - dataset$`Order Date`
activate("lubridate")
task1 <- dataset %>%
group_by(`Sub-Category`) %>%
summarise(avgLT = mean(leadTime), sdLT = sd(leadTime)) %>%
arrange(desc(avgLT))
head(task1)
task1$avgLT <-
task1$avgLT %>%
as.numeric(units = "days") %>%
round(2)
task1$sdLT  <-
task1$sdLT  %>%
as.numeric(units = "days") %>%
round(2)
print(task1)
ggplot(dataset) +
geom_boxplot(aes(x = `Sub-Category`, y = leadTime)) +
coord_flip()
dataset$leadTime <- dataset$leadTime %>% as.numeric(units = "days")
ggplot(dataset) +
geom_boxplot(aes(x = `Sub-Category`, y = leadTime)) +
coord_flip()
nrow(dataset)
dataset$leadTime==max(dataset$leadTime)
sum(dataset$leadTime==max(dataset$leadTime))
library(rmarkdown)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(background = '718CBA')
source("../../LSR.R")
library(dplyr)
library(tidyr)
library(ggplot2)
# install.packages("readxl")
library(readxl)
dataset <- read_excel("retail.xlsx")
str(dataset)
colnames(dataset)
sapply(dataset, function(x) length(unique(x)))
dataset$leadTime <- dataset$`Ship Date` - dataset$`Order Date`
task11 <- dataset %>%
group_by(`Sub-Category`) %>%
summarise(avgLT = mean(leadTime), sdLT = sd(leadTime)) %>%
arrange(desc(avgLT))
head(task11, 3)
task11$avgLT <-
task11$avgLT %>%
as.numeric(units = "days") %>%
round(2)
task11$sdLT  <-
task11$sdLT  %>%
as.numeric(units = "days") %>%
round(2)
print(task11)
ggplot(dataset) +
geom_boxplot(aes(x = `Sub-Category`, y = leadTime)) +
coord_flip()
dataset$leadTime <- dataset$leadTime %>% as.numeric(units = "days")
ggplot(dataset) +
geom_boxplot(aes(x = `Sub-Category`, y = leadTime)) +
coord_flip() +
labs(title = "Distribution of Lead Time", x = "Lead Time (in days)")
# For each Category
task13a <- dataset %>%
group_by(`Category`) %>%
summarise(maxLeadTimePercent =
100*sum(leadTime==7)/length(leadTime)) %>%
arrange(desc(maxLeadTimePercent))
task13a
# For each Sub-Category
task13b <- dataset %>%
group_by(`Sub-Category`) %>%
summarise(maxLeadTimePercent = 100*sum(leadTime==7)/length(leadTime)) %>%
arrange(desc(maxLeadTimePercent))
task13b %>% head(8) %>% t() # first 8 obs & transpose
task21a <- dataset %>%
group_by(Category) %>%
summarise(Sales = sum(Sales), Profit = sum(Profit)) %>%
mutate(profitRatio = round(Profit/Sales,2)) %>%
arrange(desc(profitRatio))
print(task21a)
# Reference: `M24 piechart`
ggplot(task21a, aes(x = "", y = Sales, fill = factor(Category))) +
geom_bar(width = 1, stat = "identity") +
theme(axis.line = element_blank(),
plot.title = element_text(hjust = 0.5)) +
labs(fill = "Category", x = NULL, y = NULL, title = "Sales Contribution") +
coord_polar(theta = "y", start = 0)
ggplot(task21a, aes(x = "", y = Profit, fill = factor(Category))) +
geom_bar(width = 1, stat = "identity") +
theme(axis.line = element_blank(),
plot.title = element_text(hjust = 0.5)) +
labs(fill = "Category", x = NULL, y = NULL, title = "Profits Contribution") +
coord_polar(theta = "y", start = 0)
task21b <- dataset %>%
group_by(`Sub-Category`) %>%
summarise(Sales = sum(Sales), Profit = sum(Profit)) %>%
mutate(profitRatio = round(Profit/Sales,2)) %>%
arrange(desc(profitRatio))
task21b
# Reference: `M24. Deviation`
task21b$profitHL <-
ifelse(task21b$profitRatio < mean(task21b$profitRatio),
"below average", "above average")
task21b <- task21b %>% arrange(profitRatio)
# Convert to factor to preserve sorted order in plot.
task21b$`Sub-Category` <-
factor(task21b$`Sub-Category`, levels = task21b$`Sub-Category`)
a <- ggplot(task21b,
aes(x = `Sub-Category`, y = profitRatio, label = profitRatio)) +
geom_bar(stat = 'identity', aes(fill = profitHL), width = .5) +
scale_fill_manual(
name = "Profit Ratio",
labels = c("Below Average", "Above Average"),
values = c("below average" = "#f8766d",
"above average" = "#00ba38")) +
labs(title = "Diverging bar",
subtitle = "Profitability of each Sub-Category") +
coord_flip()
print(a)
# Reference: `M24 Deviation`
a <- ggplot(task21b,
aes(x = `Sub-Category`, y = profitRatio, label = profitRatio)) +
geom_point(stat = 'identity', fill = "black", size = 8) +
geom_segment(aes(y = 0, x = `Sub-Category`,
yend = profitRatio, xend = `Sub-Category`),
color = "black") +
geom_text(color = "white", size = 3) +
labs(title = "Diverging Lollipop Chart",
subtitle = "Profitability of each Sub-Category") +
ylim(-0.2, 0.5) +
coord_flip()
print(a)
library(rmarkdown)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(background = '718CBA')
source("../../LSR.R")
library(dplyr)
library(tidyr)
library(ggplot2)
# install.packages("readxl")
library(readxl)
dataset <- read_excel("retail.xlsx")
str(dataset)
colnames(dataset)
sapply(dataset, function(x) length(unique(x)))
dataset$leadTime <- dataset$`Ship Date` - dataset$`Order Date`
task11 <- dataset %>%
group_by(`Sub-Category`) %>%
summarise(avgLT = mean(leadTime), sdLT = sd(leadTime)) %>%
arrange(desc(avgLT))
head(task11, 3)
task11$avgLT <-
task11$avgLT %>%
as.numeric(units = "days") %>%
round(2)
task11$sdLT  <-
task11$sdLT  %>%
as.numeric(units = "days") %>%
round(2)
print(task11)
ggplot(dataset) +
geom_boxplot(aes(x = `Sub-Category`, y = leadTime)) +
coord_flip()
dataset$leadTime <- dataset$leadTime %>% as.numeric(units = "days")
ggplot(dataset) +
geom_boxplot(aes(x = `Sub-Category`, y = leadTime)) +
coord_flip() +
labs(title = "Distribution of Lead Time", x = "Lead Time (in days)")
# For each Category
task13a <- dataset %>%
group_by(`Category`) %>%
summarise(maxLeadTimePercent =
100*sum(leadTime==7)/length(leadTime)) %>%
arrange(desc(maxLeadTimePercent))
task13a
# For each Sub-Category
task13b <- dataset %>%
group_by(`Sub-Category`) %>%
summarise(maxLeadTimePercent = 100*sum(leadTime==7)/length(leadTime)) %>%
arrange(desc(maxLeadTimePercent))
task13b %>% head(8) %>% t() # first 8 obs & transpose
task21 <- dataset %>%
group_by(Category) %>%
summarise(Sales = sum(Sales), Profit = sum(Profit)) %>%
mutate(profitRatio = round(Profit/Sales,2)) %>%
arrange(desc(profitRatio))
print(task21)
# Reference: `M24 piechart`
ggplot(task21, aes(x = "", y = Sales, fill = factor(Category))) +
geom_bar(width = 1, stat = "identity") +
theme(axis.line = element_blank(),
plot.title = element_text(hjust = 0.5)) +
labs(fill = "Category", x = NULL, y = NULL, title = "Sales Contribution") +
coord_polar(theta = "y", start = 0)
ggplot(task21, aes(x = "", y = Profit, fill = factor(Category))) +
geom_bar(width = 1, stat = "identity") +
theme(axis.line = element_blank(),
plot.title = element_text(hjust = 0.5)) +
labs(fill = "Category", x = NULL, y = NULL, title = "Profits Contribution") +
coord_polar(theta = "y", start = 0)
task22 <- dataset %>%
group_by(`Sub-Category`) %>%
summarise(Sales = sum(Sales), Profit = sum(Profit)) %>%
mutate(profitRatio = round(Profit/Sales,2)) %>%
arrange(desc(profitRatio))
task22
# Reference: `M24. Deviation`
task22$profitHL <-
ifelse(task22$profitRatio < mean(task22$profitRatio),
"below average", "above average")
task22 <- task22 %>% arrange(profitRatio)
# Convert to factor to preserve sorted order in plot.
task22$`Sub-Category` <-
factor(task22$`Sub-Category`, levels = task22$`Sub-Category`)
a <- ggplot(task22,
aes(x = `Sub-Category`, y = profitRatio, label = profitRatio)) +
geom_bar(stat = 'identity', aes(fill = profitHL), width = .5) +
scale_fill_manual(
name = "Profit Ratio",
labels = c("Below Average", "Above Average"),
values = c("below average" = "#f8766d",
"above average" = "#00ba38")) +
labs(title = "Diverging bar",
subtitle = "Profitability of each Sub-Category") +
coord_flip()
print(a)
# Reference: `M24 Deviation`
a <- ggplot(task22,
aes(x = `Sub-Category`, y = profitRatio, label = profitRatio)) +
geom_point(stat = 'identity', fill = "black", size = 8) +
geom_segment(aes(y = 0, x = `Sub-Category`,
yend = profitRatio, xend = `Sub-Category`),
color = "black") +
geom_text(color = "white", size = 3) +
labs(title = "Diverging Lollipop Chart",
subtitle = "Profitability of each Sub-Category") +
ylim(-0.2, 0.5) +
coord_flip()
print(a)
task22 %>% arrange(desc(Profit, Sales))
task23 <- dataset %>%
mutate(year    = substr(`Order Date`, 1, 4),
quarter = ceiling(as.numeric(substr(`Order Date`, 6, 7))/3)) %>%
select(year, quarter, Category, `Sub-Category`, Profit, Sales) %>%
group_by(year, quarter, Category) %>%
summarise(Sales = sum(Sales), Profit = sum(Profit))
task23$year    <- factor(task23$year)
task23$quarter <- factor(paste0("Q", task23$quarter))
head(task23)
task23 <- dataset %>%
mutate(year    = substr(`Order Date`, 1, 4),
quarter = ceiling(as.numeric(substr(`Order Date`, 6, 7))/3)) %>%
select(year, quarter, Category, `Sub-Category`, Profit, Sales) %>%
group_by(year, quarter, Category) %>%
summarise(Sales = sum(Sales), Profit = sum(Profit))
task23$year    <- factor(task23$year)
task23$quarter <- factor(paste0("Q", task23$quarter))
head(task23)
ggplot(task23, aes(x = factor(Category), y = Sales, fill = factor(Category))) +
geom_bar(stat = 'identity') + # for already aggregated quantity
facet_grid(year ~ quarter) + # x: quater, y: year
theme(axis.text.x = element_text(angle = 45, hjust = 1)) + # rotate x_label
labs(title = "Sales Trend") # title
library(rmarkdown)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(background = '718CBA')
source("../../LSR.R")
library(rmarkdown)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(background = '718CBA')
# source("../../LSR.R")
library(dplyr)
library(tidyr)
library(ggplot2)
# install.packages("readxl")
library(readxl)
dataset <- read_excel("retail.xlsx")
str(dataset)
colnames(dataset)
sapply(dataset, function(x) length(unique(x)))
dataset$leadTime <- dataset$`Ship Date` - dataset$`Order Date`
task11 <- dataset %>%
group_by(`Sub-Category`) %>%
summarise(avgLT = mean(leadTime), sdLT = sd(leadTime)) %>%
arrange(desc(avgLT))
head(task11, 3)
str(task11)
# For each Category
task13a <- dataset %>%
group_by(`Category`) %>%
summarise(maxLeadTimePercent =
100*sum(leadTime==7)/length(leadTime)) %>%
arrange(desc(maxLeadTimePercent))
task13a
library(rmarkdown)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(background = '718CBA')
# source("../../LSR.R")
library(dplyr)
library(tidyr)
library(ggplot2)
# install.packages("readxl")
library(readxl)
dataset <- read_excel("retail.xlsx")
str(dataset)
colnames(dataset)
sapply(dataset, function(x) length(unique(x)))
dataset$leadTime <- dataset$`Ship Date` - dataset$`Order Date`
task11 <- dataset %>%
group_by(`Sub-Category`) %>%
summarise(avgLT = mean(leadTime), sdLT = sd(leadTime)) %>%
arrange(desc(avgLT))
head(task11, 3)
str(task11)
task11$avgLT <-
task11$avgLT %>%
as.numeric(units = "days") %>%
round(2)
task11$sdLT  <-
task11$sdLT  %>%
as.numeric(units = "days") %>%
round(2)
print(task11)
ggplot(dataset) +
geom_boxplot(aes(x = `Sub-Category`, y = leadTime)) +
coord_flip()
dataset$leadTime <- dataset$leadTime %>% as.numeric(units = "days")
ggplot(dataset) +
geom_boxplot(aes(x = `Sub-Category`, y = leadTime)) +
coord_flip() +
labs(title = "Distribution of Lead Time", x = "Lead Time (in days)")
# For each Category
task13a <- dataset %>%
group_by(`Category`) %>%
summarise(maxLeadTimePercent =
100*sum(leadTime==7)/length(leadTime)) %>%
arrange(desc(maxLeadTimePercent))
task13a
round(task13a$maxLeadTimePercent, 1)
task13a$maxLeadTimePercent <- round(task13a$maxLeadTimePercent, 1)
task13a
task13a$maxLeadTimePercent <- paste0(task13a$maxLeadTimePercent, "%")
task13a
