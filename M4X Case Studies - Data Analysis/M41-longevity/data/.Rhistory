arrange(aceness, od, svr) %>%
select(-od) %>%
select(aceness, svr, rcv, win_pct, gameWin_pct, win, gameWin, count)
# present table
ace_H <- ace_wise %>% filter(aceness=="1H")
colnames(ace_H)[4:8] <- paste("1H", colnames(ace_H)[4:8], sep = "_")
ace_H <- ace_H %>% data.frame() %>% select(-aceness)
ace_M <- ace_wise %>% filter(aceness=="2M")
colnames(ace_M)[4:8] <- paste("2M", colnames(ace_M)[4:8], sep = "_")
ace_M <- ace_M %>% data.frame() %>% select(-aceness)
ace_L <- ace_wise %>% filter(aceness=="3L")
colnames(ace_L)[4:8] <- paste("3L", colnames(ace_L)[4:8], sep = "_")
ace_L <- ace_L %>% data.frame() %>% select(-aceness)
ace_tbl <- ace_H %>%
left_join(ace_M, by = c("svr", "rcv")) %>%
left_join(ace_L, by = c("svr", "rcv"))
ace_tbl1 <- ace_tbl %>%
select(svr, rcv,
X1H_win_pct, X2M_win_pct, X3L_win_pct,
X1H_gameWin_pct, X2M_gameWin_pct, X3L_gameWin_pct,
X1H_count, X2M_count, X3L_count)
ace_tbl1 %>% pander()
ace_tbl1
cbind(c(4,4,4,5,0:3),
c(0:3,4,4,4,5))
matrix(1, dim=c(4,3))
rep(1, dim = c(4,3))
matrix(rep(1,12), ncol=3)
temp_tbl <- cbind(c(4,4,4,5,0:3), c(0:3,4,4,4,5),
rbind(matrix(rep(1,12), ncol=3), matrix(rep(0,12), ncol=3)))
temp_tbl
ace_tbl2 <- rbind(ace_tbl2, temp_tbl)
ace_tbl2 <- ace_tbl1 %>%
select(svr, rcv,
X1H_gameWin_pct, X2M_gameWin_pct, X3L_gameWin_pct)
temp_tbl <- cbind(c(4,4,4,5,0:3), c(0:3,4,4,4,5),
rbind(matrix(rep(1,12), ncol=3), matrix(rep(0,12), ncol=3)))
ace_tbl2 <- rbind(ace_tbl2, temp_tbl)
ace_tbl2 <- rbind(ace_tbl2, data.frame(temp_tbl))
data.frame(temp_tbl)
temp_tbl <- cbind(c(4,4,4,5,0:3), c(0:3,4,4,4,5),
rbind(matrix(rep(1,12), ncol=3),
matrix(rep(0,12), ncol=3))) %>% data.frame()
temp_tbl
colnames(temp_tbl) <- colnames(ace_tbl2)
ace_tbl2 <- rbind(ace_tbl2, temp_tbl)
ace_tbl2
ace_tbl2 <- rbind(ace_tbl2, temp_tbl) %>% mutate(X1H_imp, X2M_imp, X3L_imp,)
ace_tbl2 <- ace_tbl1 %>%
select(svr, rcv,
X1H_gameWin_pct, X2M_gameWin_pct, X3L_gameWin_pct)
temp_tbl <- cbind(c(4,4,4,5,0:3), c(0:3,4,4,4,5),
rbind(matrix(rep(1,12), ncol=3),
matrix(rep(0,12), ncol=3))) %>% data.frame()
colnames(temp_tbl) <- colnames(ace_tbl2)
ace_tbl2 <- rbind(ace_tbl2, temp_tbl) %>% mutate(X1H_imp, X2M_imp, X3L_imp,)
ace_tbl2 <- ace_tbl1 %>%
select(svr, rcv,
X1H_gameWin_pct, X2M_gameWin_pct, X3L_gameWin_pct)
temp_tbl <- cbind(c(4,4,4,5,0:3), c(0:3,4,4,4,5),
rbind(matrix(rep(1,12), ncol=3),
matrix(rep(0,12), ncol=3))) %>% data.frame()
colnames(temp_tbl) <- colnames(ace_tbl2)
ace_tbl2 <- rbind(ace_tbl2, temp_tbl) %>% mutate(X1H_imp=0, X2M_imp=0, X3L_imp=0)
ace_tbl2
ace_tbl2 <- ace_tbl1 %>%
select(svr, rcv,
X1H_gameWin_pct, X2M_gameWin_pct, X3L_gameWin_pct)
temp_tbl <- cbind(c(4,4,4,5,0:3), c(0:3,4,4,4,5),
rbind(matrix(rep(1,12), ncol=3),
matrix(rep(0,12), ncol=3))) %>% data.frame()
df <- rbind(ace_tbl2, temp_tbl) %>%
mutate(X1H_imp=0, X2M_imp=0, X3L_imp=0)
df <- rbind(ace_tbl2, temp_tbl) %>%
mutate(X1H_imp=0, X2M_imp=0, X3L_imp=0)
ace_tbl2 <- ace_tbl1 %>%
select(svr, rcv,
X1H_gameWin_pct, X2M_gameWin_pct, X3L_gameWin_pct)
temp_tbl <- cbind(c(4,4,4,5,0:3), c(0:3,4,4,4,5),
rbind(matrix(rep(1,12), ncol=3),
matrix(rep(0,12), ncol=3))) %>% data.frame()
colnames(temp_tbl) <- colnames(ace_tbl2)
df <- rbind(ace_tbl2, temp_tbl) %>%
mutate(X1H_imp=0, X2M_imp=0, X3L_imp=0)
df
i <- 1
which(df$svr==df$svr[i]+1)
rcv_win <- which(df$rcv==df$rcv[i]+1)
rcv_win
svr_win
for (i in 1:18) {
svr_win <- which(df$svr==df$svr[i]+1)
rcv_win <- which(df$rcv==df$rcv[i]+1)
svr_lose <- which(df$svr==df$svr[i])
rcv_lose <- which(df$rcv==df$rcv[i])
df[i,7:9] <-
df[intersect(svr_win, rcv_lose),4:6]-
df[intersect(svr_lose, rcv_win),4:6]
}
i <- 1
svr_win <- which(df$svr==df$svr[i]+1)
rcv_win <- which(df$rcv==df$rcv[i]+1)
svr_lose <- which(df$svr==df$svr[i])
rcv_lose <- which(df$rcv==df$rcv[i])
svr_win
rcv_lose
intersect(svr_win, rcv_lose)
df[3,4:6]
ace_tbl2 <- ace_tbl1 %>%
select(svr, rcv,
X1H_gameWin_pct, X2M_gameWin_pct, X3L_gameWin_pct)
temp_tbl <- cbind(c(4,4,4,5,0:3), c(0:3,4,4,4,5),
rbind(matrix(rep(1,12), ncol=3),
matrix(rep(0,12), ncol=3))) %>% data.frame()
colnames(temp_tbl) <- colnames(ace_tbl2)
df <- rbind(ace_tbl2, temp_tbl) %>%
mutate(X1H_imp=0, X2M_imp=0, X3L_imp=0)
for (i in 1:18) {
svr_win <- which(df$svr==df$svr[i]+1)
rcv_win <- which(df$rcv==df$rcv[i]+1)
svr_lose <- which(df$svr==df$svr[i])
rcv_lose <- which(df$rcv==df$rcv[i])
df[i,9:11] <-
df[intersect(svr_win, rcv_lose),6:8]-
df[intersect(svr_lose, rcv_win),6:8]
}
ace_tbl2 <- ace_tbl1 %>%
select(svr, rcv,
X1H_gameWin_pct, X2M_gameWin_pct, X3L_gameWin_pct)
temp_tbl <- cbind(c(4,4,4,5,0:3), c(0:3,4,4,4,5),
rbind(matrix(rep(1,12), ncol=3),
matrix(rep(0,12), ncol=3))) %>% data.frame()
colnames(temp_tbl) <- colnames(ace_tbl2)
df <- rbind(ace_tbl2, temp_tbl) %>%
mutate(X1H_imp=0, X2M_imp=0, X3L_imp=0)
for (i in 1:18) {
print(i)
svr_win <- which(df$svr==df$svr[i]+1)
rcv_win <- which(df$rcv==df$rcv[i]+1)
svr_lose <- which(df$svr==df$svr[i])
rcv_lose <- which(df$rcv==df$rcv[i])
df[i,9:11] <-
df[intersect(svr_win, rcv_lose),6:8]-
df[intersect(svr_lose, rcv_win),6:8]
}
i <- 18
svr_win <- which(df$svr==df$svr[i]+1)
rcv_win <- which(df$rcv==df$rcv[i]+1)
svr_lose <- which(df$svr==df$svr[i])
rcv_lose <- which(df$rcv==df$rcv[i])
df
ace_tbl2 <- ace_tbl1 %>%
select(svr, rcv,
X1H_gameWin_pct, X2M_gameWin_pct, X3L_gameWin_pct)
temp_tbl <- cbind(c(4,4,4,5,0:3), c(0:3,4,4,4,5),
rbind(matrix(rep(1,12), ncol=3),
matrix(rep(0,12), ncol=3))) %>% data.frame()
colnames(temp_tbl) <- colnames(ace_tbl2)
df <- rbind(ace_tbl2, temp_tbl) %>%
mutate(X1H_imp=0, X2M_imp=0, X3L_imp=0)
df <- rbind(df, df(tail,1))
ace_tbl2 <- ace_tbl1 %>%
select(svr, rcv,
X1H_gameWin_pct, X2M_gameWin_pct, X3L_gameWin_pct)
temp_tbl <- cbind(c(4,4,4,5,0:3), c(0:3,4,4,4,5),
rbind(matrix(rep(1,12), ncol=3),
matrix(rep(0,12), ncol=3))) %>% data.frame()
colnames(temp_tbl) <- colnames(ace_tbl2)
df <- rbind(ace_tbl2, temp_tbl) %>%
mutate(X1H_imp=0, X2M_imp=0, X3L_imp=0)
df <- rbind(df, tail(df,1))
df[nrow(df),1:2] <- c(4,4)
df
ace_tbl2 <- ace_tbl1 %>%
select(svr, rcv,
X1H_gameWin_pct, X2M_gameWin_pct, X3L_gameWin_pct)
temp_tbl <- cbind(c(4,4,4,5,0:3), c(0:3,4,4,4,5),
rbind(matrix(rep(1,12), ncol=3),
matrix(rep(0,12), ncol=3))) %>% data.frame()
colnames(temp_tbl) <- colnames(ace_tbl2)
df <- rbind(ace_tbl2, temp_tbl) %>%
mutate(X1H_imp=0, X2M_imp=0, X3L_imp=0)
df <- rbind(df, df[16,])
df[nrow(df),1:2] <- c(4,4)
df
df
df
for (i in 1:18) {
print(i)
svr_win <- which(df$svr==df$svr[i]+1)
rcv_win <- which(df$rcv==df$rcv[i]+1)
svr_lose <- which(df$svr==df$svr[i])
rcv_lose <- which(df$rcv==df$rcv[i])
df[i,6:8] <-
df[intersect(svr_win, rcv_lose),3:5]-
df[intersect(svr_lose, rcv_win),3:5]
}
df
df
df2
df
df[19:nrow(df),] <- NULL
df <- df[1:18,]
df
ace_tbl3 <- cbind(df[,1:2], ace_tbl1[,3:5], df[,-(1:2)])
ace_tbl3
rm(list=ls(all=TRUE))
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_chunk$set(message = FALSE)
options(stringsAsFactors = FALSE)
# set pander table-layout options
library(pander)
panderOptions('table.alignment.default', function(df)
ifelse(sapply(df, is.numeric), 'right', 'left'))
panderOptions('table.split.table', Inf)
panderOptions('big.mark', ",")
panderOptions('keep.trailing.zeros', TRUE)
source("tennis.R")
library(stringr)
library(dplyr)
library(tidyr)
library(purrr)
library(data.table)
raw <- read.csv("../raw_data/pbp_matches_atp_main_archive.csv",
header=TRUE, sep=",", stringsAsFactors=FALSE)
raw[1,] %>% pander()
appear_s1 <- raw %>% group_by(server1) %>% summarise(appear_s1 = n())
appear_s2 <- raw %>% group_by(server2) %>% summarise(appear_s2 = n())
appearance <- full_join(appear_s1, appear_s2, by = c("server1"="server2")) %>%
rename(player = server1) %>%
replace(., is.na(.), 0) %>%
mutate(count = appear_s1 + appear_s2) %>%
select(player, count) %>%
arrange(desc(count))
appearance <- appearance[1:120,]
head(appearance) %>% pander()
tail(appearance) %>% pander()
aceRecordingTny <- raw %>% group_by(tny_name) %>%
summarise(num_match = n(), num_ace = pbp %>% str_count("A") %>% sum()) %>%
filter(num_ace > num_match) %>% select(tny_name)
# splitPbpSet <- 1:nrow(raw) %>% map(function(x) split_pbp_set(raw,x)) %>% rbindlist()
# splitPbpSet$svr1_pbp <- sapply(splitPbpSet$pbp, function(x) split_pbp_set_servers(x)[1])
# splitPbpSet$svr2_pbp <- sapply(splitPbpSet$pbp, function(x) split_pbp_set_servers(x)[2])
# save(splitPbpSet, file = "splitPbpSet.rda")
load(file = "splitPbpSet.rda")
svr1 <- splitPbpSet %>%
select(tny_name, set_no, server1, svr1_pbp, set_until)
svr2 <- splitPbpSet %>%
select(tny_name, set_no, server1, svr1_pbp, set_until)
colnames(svr1)[3:4] <- c("player", "svr_pbp")
colnames(svr2)[3:4] <- c("player", "svr_pbp")
svr_pbp <- rbind(svr1, svr2)
head(svr_pbp) %>% pander() # check the server switching
ace_pct <- svr_pbp %>%
filter(tny_name %in% aceRecordingTny$tny_name) %>%
group_by(player) %>%
summarise(ace_count = sum(str_count(svr_pbp, "A")),
count = sum(nchar(svr_pbp)),
sc_count = sum(str_count(svr_pbp, ";")))
ace_pct <- ace_pct %>% mutate(count = count - sc_count) %>%
select(player, ace_count, count) %>%
mutate(ace_pct = ace_count/count) %>%
filter(player %in% appearance$player) %>%
arrange(desc(ace_pct)) %>%
mutate(aceness = if_else(row_number() <= n()/3, "1H",
if_else(row_number() <= 2*n()/3, "2M", "3L")))
head(ace_pct) %>% pander()
tail(ace_pct) %>% pander()
# Sys.time()
# all_pts <- list(NULL)
# for (i in 1:nrow(svr_pbp)) { # 40-minutes
#   set_i <- svr_pbp[i,]
#   pts_i <- set_i$svr_pbp %>% str_split(";") %>% unlist()
#   pts_i <- 1:length(pts_i) %>%
#     map(function(x) game2pt(pts_i[x])) %>% rbindlist()
#   all_pts[[i]] <- cbind(set_i[,c(1:3,5)], pts_i)
# }
# all_pts <- rbindlist(all_pts)
# Sys.time()
# save(all_pts, file = "all_pts.rda")
load(file = "all_pts.rda")
library(zoo)
dataset <- left_join(all_pts, ace_pct, by="player") %>%
select(tny_name, set_no, player, win, svr, rcv, aceness)
lst_pts <- c(which(dataset$svr==0 & dataset$rcv==0)-1, nrow(dataset))
dataset$gameWin <- rep(NA, nrow(dataset))
dataset$gameWin[lst_pts] <- (dataset$svr[lst_pts] > dataset$rcv[lst_pts])
dataset$gameWin <- zoo(rev(dataset$gameWin)) %>% na.locf() %>% rev() %>% as.vector()
dataset$gameWin <- ifelse(dataset$gameWin, "S", "R")
# deuce to 3:3
deuce_idx <- which((dataset$svr==dataset$rcv) & (dataset$svr >= 4))
dataset$svr[deuce_idx] <- 3
dataset$rcv[deuce_idx] <- 3
# adv.a to 4:3
adv_a_idx <- which((dataset$svr > dataset$rcv) & (dataset$svr >= 4))
dataset$svr[adv_a_idx] <- 4
dataset$rcv[adv_a_idx] <- 3
# adv.b to 3:4
adv_b_idx <- which((dataset$svr < dataset$rcv) & (dataset$rcv >= 4))
dataset$svr[adv_b_idx] <- 3
dataset$rcv[adv_b_idx] <- 4
dim(dataset) # number of points analyzed
head(dataset) %>% pander()
ace_wise <- dataset %>%
filter(!is.na(aceness)) %>%
group_by(aceness, svr, rcv) %>%
summarise(count = n(),
win = sum(win %in% c("S","A")),
gameWin = sum(gameWin=="S")) %>%
mutate(od = svr+rcv,
win_pct = win/count,
gameWin_pct = gameWin/count) %>%
arrange(aceness, od, svr) %>%
select(-od) %>%
select(aceness, svr, rcv, win_pct, gameWin_pct, win, gameWin, count)
# present table
ace_H <- ace_wise %>% filter(aceness=="1H")
colnames(ace_H)[4:8] <- paste("1H", colnames(ace_H)[4:8], sep = "_")
ace_H <- ace_H %>% data.frame() %>% select(-aceness)
ace_M <- ace_wise %>% filter(aceness=="2M")
colnames(ace_M)[4:8] <- paste("2M", colnames(ace_M)[4:8], sep = "_")
ace_M <- ace_M %>% data.frame() %>% select(-aceness)
ace_L <- ace_wise %>% filter(aceness=="3L")
colnames(ace_L)[4:8] <- paste("3L", colnames(ace_L)[4:8], sep = "_")
ace_L <- ace_L %>% data.frame() %>% select(-aceness)
ace_tbl <- ace_H %>%
left_join(ace_M, by = c("svr", "rcv")) %>%
left_join(ace_L, by = c("svr", "rcv"))
ace_tbl1 <- ace_tbl %>%
select(svr, rcv,
X1H_win_pct, X2M_win_pct, X3L_win_pct,
X1H_gameWin_pct, X2M_gameWin_pct, X3L_gameWin_pct,
X1H_count, X2M_count, X3L_count)
# ace_tbl1 %>% pander()
ace_tbl3 * 100 %>% pander()
ace_tbl2 <- ace_tbl1 %>%
select(svr, rcv,
X1H_gameWin_pct, X2M_gameWin_pct, X3L_gameWin_pct)
temp_tbl <- cbind(c(4,4,4,5,0:3), c(0:3,4,4,4,5),
rbind(matrix(rep(1,12), ncol=3),
matrix(rep(0,12), ncol=3))) %>% data.frame()
colnames(temp_tbl) <- colnames(ace_tbl2)
df <- rbind(ace_tbl2, temp_tbl) %>%
mutate(X1H_imp=0, X2M_imp=0, X3L_imp=0)
df <- rbind(df, df[16,])
df[nrow(df),1:2] <- c(4,4)
for (i in 1:18) {
print(i)
svr_win <- which(df$svr==df$svr[i]+1)
rcv_win <- which(df$rcv==df$rcv[i]+1)
svr_lose <- which(df$svr==df$svr[i])
rcv_lose <- which(df$rcv==df$rcv[i])
df[i,6:8] <-
df[intersect(svr_win, rcv_lose),3:5]-
df[intersect(svr_lose, rcv_win),3:5]
}
df <- df[1:18,]
ace_tbl3 <- cbind(df[,1:2], ace_tbl1[,3:5], df[,-(1:2)])
ace_tbl3 * 100 %>% pander()
ace_tbl3
(ace_tbl3*100)
(ace_tbl3*100) %>% pander()
aprilFool <- "2009-12-01"
aprilFool
class(aprilFool)
as.Date(aprilFool)
class(as.Date(aprilFool))
aprilFool
class(aprilFool)
aprilFool <- as.Date(aprilFool)
aprilFool
class(aprilFool)
library(rmarkdown)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(background = '718CBA')
cat("Error: unexpected symbol in \"Hello\"")
"Hello"
greeting <- "Hello" # Assign "Hello" to variable name `greeting`
greeting
cat("Error in greeting + \"Hello\" : non-numeric argument to binary operator")
paste(greeting, "World")
a <- "apple"
a <- "apple"
a <- 'apple'
a = "apple"
a = 'apple'
a == "apple" # is equal?
a != "apple" # is not equal?
a == "banana" # is equal?
a # show a
paste(greeting, "World")
paste(greeting, "!")
paste0(greeting, "!")
paste(greeting, "!", sep = "")
greeting <- "R says \"Hello World!\""
nchar(greeting) # number of characters
substr(greeting, 3, 6) # substring from 3 to 6
greeting # show
cat(greeting) # show cleanly
10^2 + 36
a <- 4
a
a*5
a <- a + 10 # assign a+10 to a
a
2==3
5>3
is.character(5)
is.character("5")
a <- as.character(5)
is.character(a)
b <- as.numeric(a)
is.numeric(b)
as.numeric(2==3)
class(5)
class("TRUE")
class(TRUE)
mydates <- as.Date(c("2007-06-22", "2004-02-13"))
mydates[1] - mydates[2]
today <- Sys.Date( ) # today
today
# year
as.numeric(substr(today, 1, 4))
# month
as.numeric(substr(today, 6, 7))
# day
as.numeric(substr(today, 9, 10))
# mm-dd-YYYY
format(today, format="%B %d %Y")
strVec1 <- c("Hello", "Hi", "What's up")
strVec1
strVec2 <- c("Ma'am", "Sir", "Your Honor")
strVec3 <- paste(strVec1, strVec2, sep = ", ")
strVec3
numVec1 <- c(30,50,70)
numVec1
numVec2 <- seq(30,70,20)
numVec2
numVec3 <- c(25,55,80)
numVec3
numVec4 <- seq(from=20, to=1, by=-3)
numVec4
2:6
min(numVec1) # by all
min(numVec1, numVec3) # by all
pmin(numVec1, numVec3) # by element
numVec1 > numVec3 # by element
numVec1[2]
numVec1[-2]
numVec1[1:2]
numVec1[c(1,3)]
mat <- matrix(data = c(9,2,3,4,5,6), ncol = 3)
mat
mat[1, 2] # first row, second column
mat[2, ] # second row
mean(mat)
apply(mat, 2, mean) # colMeans(mat)
apply(mat, 1, mean) # rowMeans(mat)
weather <-
data.frame(date = c("2017-8-31", "2017-9-1", "2017-9-2"),
sky  = c("Sunny", "Cloudy", "Rainy"),
temp = c(20, 15, 18),
dust = c(24, 50, 23),
stringsAsFactors = FALSE)
weather
colnames(weather)
weather$sky
weather$sky==weather[,2]
class(weather)
class(weather$date)
apply(weather, 2, class)
sapply(weather, class)
class(weather)
class(weather$date)
apply(weather, 2, class)
sapply(weather, class)
sapply(weather, class)
apply(weather, 2, class)
sapply(weather, class)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(background = '718CBA')
library(ISLR) # load `ISLR` package
class(Carseats) # data structure
head(Carseats) # the first 6 observations
tail(Carseats, 2) # the last 2 observations
View(Carseats) # a pop-up windows
dim(Carseats) # dimensions
str(Carseats) # structural view
summary(Carseats) # summary statistics
sapply(Carseats, class)
sapply(Carseats, function(x) length(unique(x)))
library(dplyr)
library(dplyr)
str(Carseats)
# dplyr: rename `Sales` to `Revenue`
temp <- rename(Carseats, Revenue = Sales)
names(temp)
names(temp)=="Revenue"
names(temp)[names(temp)=="Revenue"]
names(temp)[names(temp)=="Revenue"]  <- "Sales"
temp
head(temp)
temp <- rename(temp, Revenue = Sales)
temp %>% head()
read.csv("lifeCountry.csv")
getwd()
C:\LS-DS\M4X Case Studies - Data Analysis\M41-longevity\data
C:\LS-DS\M4X Case Studies - Data Analysis\M41-longevity\data
setwd("C:\\LS-DS\\M4X Case Studies - Data Analysis\\M41-longevity\\data")
getwd()
dataset <- read.csv("lifeCountry.csv", stringsAsFactors = FALSE)
dataset
