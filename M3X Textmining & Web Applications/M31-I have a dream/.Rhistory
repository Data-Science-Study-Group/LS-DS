library(rmarkdown)
library(dplyr)
library(ggplot2)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(background = '718CBA')
ggplot(mpg) +
geom_bar(aes(x = displ_fac, fill = class)) +
position_fill()
ggplot(mpg) +
geom_bar(aes(x = displ_fac, fill = class)) +
position_dodge()
ggplot(mpg) + geom_bar(aes(x = class))
ggplot(mpg) + geom_bar(aes(x = class)) + coord_flip()
ggplot(mpg) + geom_bar(aes(x = class)) + coord_polar()
ggplot(mpg) + geom_bar(aes(fill = class))
ggplot(mpg) + geom_bar(aes(x = factor(1), fill = class))
ggplot(mpg) + geom_bar(aes(x = 1, fill = class))
ggplot(mpg) + geom_bar(aes(x = 1, fill = class)) + coord_polar()
ggplot(mpg) + geom_bar(aes(x = 1, fill = class)) + coord_polar(theta = class)
ggplot(mpg) + geom_bar(aes(x = 1, fill = class)) + coord_polar(theta = class)
ggplot(mpg) + geom_bar(aes(x = 1, fill = class)) + coord_polar(theta = "y")
ggplot(mpg) + geom_bar(aes(x = 1, fill = class)) + coord_polar(theta = "y") + ylab()
ggplot(mpg) + geom_bar(aes(x = 1, fill = class)) + coord_polar(theta = "y") + ylab("")
ggplot(mpg) + geom_bar(aes(x = 1, fill = class)) + coord_polar(theta = "y") + xlab("")
ggplot(mpg) + geom_bar(aes(x = 1, fill = class)) + coord_polar(theta = "y") +
xlab("") + ylab("")
ggplot(mpg) + geom_bar(aes(x = factor(1), fill = class)) + coord_polar(theta = "y") +
xlab("") + ylab("")
ggplot(mpg) + geom_bar(aes(x = factor(1), fill = class)) + coord_polar(theta = "y") +
ggplot(mpg) + geom_bar(aes(x = factor(1), fill = class)) + coord_polar(theta = "y")
ggplot(mpg) + geom_bar(aes(x = factor(1), fill = class)) + coord_polar(theta = "y")
ggplot(mpg) + geom_bar(aes(x = factor(1), fill = class)) + coord_polar(theta = "y") +
ylab("")
ggplot(mpg) + geom_bar(aes(x = factor(1), fill = class)) + coord_polar(theta = "y") +
ylab("") + xlab("")
ggplot(mpg) + geom_bar(aes(x = factor(1), fill = class))
ggplot(mpg) + geom_bar(aes(x = factor(1), fill = class)) + coord_polar(theta = "y")
ggplot(mpg) + geom_bar(aes(x = 1, fill = class))
ggplot(mpg) + geom_bar(aes(x = 1, fill = class)) + coord_polar(theta = "y")
ggplot(mpg) + geom_bar(aes(x = 1, fill = class)) + coord_polar(theta = "y") +
ylab("") + xlab("")
ggplot(mpg) + geom_bar(aes(x = factor(1), fill = class)) + coord_polar(theta = "y") +
ylab("") + xlab("")
ggplot(mpg) + geom_bar(aes(x = 0, fill = class)) + coord_polar(theta = "y")
ggplot(mpg) + geom_bar(aes(x = 0, fill = class)) + coord_polar(theta = "y") +
ylab("") + xlab("")
ggplot(mpg) + geom_bar(aes(x = 0, fill = class)) + coord_polar(theta = "y") +
ylab('') + xlab('')
ggplot(mpg) + geom_bar(aes(x = 1, fill = class)) + coord_polar(theta = "y") +
ylab('') + xlab('')
ggplot(mpg) + geom_bar(aes(x = 1, fill = class)) + coord_polar(theta = "y") +
ylab('') + xlab('') + legend(x = NULL)
ggplot(mpg) + geom_bar(aes(x = factor(1), fill = class)) + coord_polar(theta = "y") +
ylab('') + xlab('') + legend(x = NULL)
ggplot(mpg) + geom_bar(aes(x = factor(1), fill = class)) + coord_polar(theta = "y") +
ylab('') + xlab('')
ggplot(mpg) + geom_bar(aes(x = as.factor(1), fill = class)) + coord_polar(theta = "y") +
ylab('') + xlab('')
ggplot(mpg) + geom_bar(aes(x = 1, fill = class))
ggplot(mpg) + geom_bar(aes(x = 1, y = class, fill = class))
ggplot(mpg) + geom_bar(aes(x = 1, fill = class))
ggplot(mpg) + geom_bar(aes(x = 1, fill = class)) + coord_polar(theta = "y") +
ylab('') + xlab('') + labs(fill='Response')
ggplot(mpg) + geom_bar(aes(x = 1, fill = class)) + coord_polar(theta = "y") +
ylab('') + xlab('')
ggplot(mpg) +
geom_boxplot(aes(x = class, y = hwy)) +
coord_flip()
ggplot(mpg) + geom_bar(aes(x = 1, fill = class))
ggplot(mpg) + geom_bar(aes(x = 1, fill = class), width = 1)
a + coord_polar(theta = "y")
a <- ggplot(mpg) + geom_bar(aes(x = 1, fill = class), width = 1)
a + coord_polar(theta = "y")
a <- ggplot(mpg, aes(x = 1, fill = class)) +
geom_bar(width = 1) +
theme(legend.position = "none")
a
a + coord_polar()
a + coord_polar(theta = "y")
ggplot(mpg, aes(x = class, fill = class)) +
geom_bar() + coord_flip()
a <- ggplot(mpg, aes(x = 1, fill = class)) +
geom_bar(width = 1) +
theme(legend.position = "none")
a + coord_polar(theta = "y")
ggplot(mpg, aes(x = 1, fill = class)) +
geom_bar(width = 1)
ggplot(mpg, aes(x = 1, fill = class)) +
geom_bar(width = 1)
ggplot(mpg, aes(x = 1, fill = class)) +
geom_bar(width = 1) + coord_flip()
ggplot(mpg, aes(x = 1, fill = class)) +
geom_bar(width = 1) + coord_polar(theta = "y")
ggplot(mpg, aes(x = 1, fill = class)) +
geom_bar()
ggplot(mpg, aes(x = 1, fill = class)) +
geom_bar() + coord_polar(theta = "y")
ggplot(mpg, aes(x = "", fill = factor(class))) +
geom_bar(width = 1) +
theme(axis.line = element_blank(),
plot.title = element_text(hjust=0.5)) +
coord_polar(theta = "y", start=0)
ggplot(mpg, aes(x = "", fill = class)) +
geom_bar() + coord_polar(theta = "y")
ggplot(mpg, aes(x = "", fill = class)) +
geom_bar()
ggplot(mpg, aes(x = "", fill = class)) +
geom_bar() + coord_polar(theta = "y")
ggplot(mpg, aes(x = 1, fill = class)) +
geom_bar() + coord_polar(theta = "y")
ggplot(mpg, aes(x = 1, fill = class)) +
geom_bar()
ggplot(mpg, aes(x = 1, fill = class)) +
geom_bar() + coord_polar(theta = "y")
ggplot(mpg, aes(x = "", fill = factor(class))) +
geom_bar(width = 1) +
theme(axis.line = element_blank(),
plot.title = element_text(hjust=0.5)) +
coord_polar(theta = "y", start=0)
ggplot(mpg, aes(x = "", fill = class)) +
geom_bar(width = 1) +
theme(axis.line = element_blank(),
plot.title = element_text(hjust=0.5)) +
coord_polar(theta = "y", start=0)
ggplot(mpg, aes(x = "", fill = class)) +
geom_bar() +
theme(axis.line = element_blank(),
plot.title = element_text(hjust=0.5)) +
coord_polar(theta = "y", start=0)
ggplot(mpg, aes(x = 1, fill = class)) +
geom_bar() +
theme(axis.line = element_blank(),
plot.title = element_text(hjust=0.5)) +
coord_polar(theta = "y", start=0)
ggplot(mpg, aes(x = 1, fill = class)) +
geom_bar() +
theme(axis.line = element_blank(),
plot.title = element_text(hjust=0.5)) +
coord_polar(theta = "y", start=0)
ggplot(mpg, aes(x = "", fill = class)) +
geom_bar() +
theme(axis.line = element_blank(),
plot.title = element_text(hjust=0.5)) +
coord_polar(theta = "y", start=0)
ggplot(mpg, aes(x = "", fill = class)) +
geom_bar() +
theme(axis.line = element_blank(),
plot.title = element_text(hjust=0.5)) +
coord_polar(theta = "y", start=0) +
labs(fill="class", x=NULL, y=NULL,
title="Pie Chart of class",
caption="Source: mpg")
ggplot(mpg, aes(x = "", fill = factor(class))) +
geom_bar() +
theme(axis.line = element_blank(),
plot.title = element_text(hjust=0.5)) +
coord_polar(theta = "y", start=0) +
labs(fill="class", x=NULL, y=NULL,
title="Pie Chart of class",
caption="Source: mpg")
ggplot(mpg, aes(x = "", fill = factor(class))) +
geom_bar(width = 1) +
theme(axis.line = element_blank(),
plot.title = element_text(hjust=0.5)) +
labs(fill = "class", x = NULL, y = NULL,
title = "Pie Chart of class",
caption = "Source: mpg") +
coord_polar(theta = "y", start=0)
library(plotly)
a <- ggplot(mpg) + geom_bar(aes(x=class))
ggplotly(a)
library(rmarkdown)
library(dplyr)
library(ggplot2)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(background = '718CBA')
knitr::opts_chunk$set(warning = FALSE)
library(plotly)
a <- ggplot(mpg) + geom_bar(aes(x=class))
ggplotly(a)
library(tm) # for text mining
library(SnowballC) # for text stemming
library(wordcloud) # word-cloud generator
library(wordcloud2) # word-cloud generator
library(RColorBrewer) # color palettes
library(ggplot2)
library(dplyr)
library(tm) # for text mining
library(SnowballC) # for text stemming
library(wordcloud) # word-cloud generator
library(wordcloud2) # word-cloud generator
library(RColorBrewer) # color palettes
library(ggplot2)
library(dplyr)
# txt in web? no problem!
filePath <- paste0(
"http://www.sthda.com/sthda/RDoc/",
"example-files/martin-luther-king",
"-i-have-a-dream-speech.txt")
text <- readLines(filePath)
docs <- Corpus(VectorSource(text))
inspect(docs)
inspect(docs)
class(docs)
toSpace <- content_transformer(
function(x, pattern) gsub(pattern, " ", x))
docs <- docs %>%
tm_map(toSpace, "/") %>%
tm_map(toSpace, "@") %>%
tm_map(toSpace, "\\|")
docs <- docs %>%
tm_map(content_transformer(tolower)) %>%         # Convert it to lower case
tm_map(removeNumbers) %>%                        # Remove numbers
tm_map(removeWords, stopwords("english")) %>%    # Remove english common stopwords
tm_map(removeWords, c("blabla1", "blabla2")) %>% # Remove your own stop word
tm_map(removePunctuation) %>%                    # Remove punctuations
tm_map(stripWhitespace)                          # Eliminate extra white spaces
inspect(docs)
termMat   <- TermDocumentMatrix(docs)
termMat
class(termMat)
termTable <- as.matrix(termMat)
termTable
head(termTable)
class(termTable)
head(termTable)
rowSums(termTable)
head(termTable)
freqTable <- data.frame(word = rownames(termTable),
freq = rowSums(termTable),
row.names = NULL)
View(freqTable)
freqTable <- freqTable %>% arrange(desc(freq))
head(freqTable)
freqTable %>% head()
ggplot(data = head(freqTable, 20)) +
geom_bar(aes(x = reorder(word, freq), y = freq), stat="identity") +
coord_flip() +
theme(axis.text = element_text(size = 16)) +
labs(x = "Word", y = "Frequency")
wordcloud(words = freqTable$word, freq = freqTable$freq,
min.freq = 1, max.words=200, random.order=FALSE, rot.per=0.35,
colors=brewer.pal(8, "Dark2"))
# for html, newer version is available!
# wordcloud2(freqTable, color = "random-light", backgroundColor = "grey")
wordcloud2(freqTable, color = "random-light", backgroundColor = "grey")
wordcloud2(freqTable, color = "random-light", backgroundColor = "grey")
getwd()
library(KoNLP)
# Korean Natural Language Processing
library(pdftools)
# Extract text from pdf
# local pdf
text <- pdf_text("../script/sonaki.pdf")
# Apply extract Noun
docs <- sapply(
text, extractNoun, USE.NAMES = F)
docs <- unlist(docs)
# Character length >= 2
docs <- Filter(
function(x) {nchar(x) >= 2}, docs)
text
head(text)
docs
# local pdf
text <- pdf_text("../script/sonaki.pdf")
# Apply extract Noun
docs <- sapply(
text, extractNoun, USE.NAMES = F)
docs <- unlist(docs)
# Character length >= 2
docs <- Filter(
function(x) {nchar(x) >= 2}, docs)
# `extractNoun` already
# took care of...
# `extractNoun` already
# took care of...
# `extractNoun` already
# took care of...
# `extractNoun` already
# took care of...
# `extractNoun` already
# took care of...
# `extractNoun` already
# took care of...
# `extractNoun` already
# took care of...
# `extractNoun` already
# took care of...
# `extractNoun` already
# took care of...
# `extractNoun` already
# took care of...
# `extractNoun` already
# took care of...
# `extractNoun` already
# took care of...
# `extractNoun` already
# took care of...
# `extractNoun` already
# took care of...
# `extractNoun` already
# took care of...
freqTable <- data.frame(table(docs))
names(freqTable) <- c("word", "freq")
freqTable <- freqTable %>%
arrange(desc(freq))
# head(freqTable)
head(freqTable)
ggplot(data = head(freqTable, 20)) +
geom_bar(aes(x = reorder(word, freq), y = freq), stat="identity") +
coord_flip() +
theme(axis.text = element_text(size = 16)) +
labs(x = "Word", y = "Frequency")
wordcloud(words = freqTable$word, freq = freqTable$freq,
min.freq = 1, max.words=200, random.order=FALSE, rot.per=0.35,
colors=brewer.pal(8, "Dark2"))
# for html, newer version is available!
# wordcloud2(freqTable, color = "random-light", backgroundColor = "grey")
wordcloud2(freqTable, color = "random-light", backgroundColor = "grey")
